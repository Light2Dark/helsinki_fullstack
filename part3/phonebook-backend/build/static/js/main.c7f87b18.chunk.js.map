{"version":3,"sources":["components/Person.js","components/PersonForm.js","services/phoneService.js","components/Notification.js","App.js","index.js"],"names":["Person","props","name","number","onClick","deleteNum","PersonForm","onSubmit","required","value","newName","onChange","handleNameChange","newNumber","handleNumberChange","type","baseUrl","services","getAll","axios","get","then","response","data","create","newObject","post","id","delete","console","log","replace","put","SuccessNotification","message","className","ErrorNotification","App","useState","persons","setPersons","setNewName","setNewNumber","addedMessage","setAddedMessage","errorMessage","setErrorMessage","useEffect","phoneService","personsData","event","preventDefault","personObject","person","window","confirm","returnedPerson","map","catch","error","setTimeout","filter","p","newPerson","concat","target","alert","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c7f87b18.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Person = (props) => {\r\n    return (\r\n      <>\r\n        {props.name} {props.number} <button onClick = {props.deleteNum}>delete</button><br />\r\n      </>\r\n    )\r\n  }\r\n\r\nexport default Person","import React from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n    return (\r\n        <>\r\n            <form onSubmit = {props.onSubmit}>\r\n                <div>Name: \r\n                    <input required value = {props.newName} onChange = {props.handleNameChange} />\r\n                </div>\r\n\r\n                <div>Number: \r\n                    <input value = {props.newNumber} onChange = {props.handleNumberChange} />\r\n                </div>\r\n\r\n                <div>\r\n                    <button type=\"submit\">Add</button>\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import axios from 'axios'\r\nconst baseUrl = \"/api/persons\"\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = (newObject) => {\r\n    const request = axios.post(baseUrl, newObject) // generates id for you\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deleteNum = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    const response = request.then(response => response.data) // does not return anything\r\n    console.log(response)\r\n    return response\r\n}\r\n\r\nconst replace = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst services = {getAll, create, deleteNum, replace}\r\nexport default services","const SuccessNotification = ({message}) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className = \"success\">\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ErrorNotification = ({message}) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className = \"error\">\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\n// based on notification.type\r\n// return (\r\n//     <div className={notification.type}>\r\n//       {notification.message}\r\n//     </div>\r\n//   )\r\n\r\nexport {SuccessNotification, ErrorNotification}","import React, {useState, useEffect} from 'react'\nimport Person from './components/Person'\nimport PersonForm from './components/PersonForm'\nimport phoneService from './services/phoneService'\nimport {SuccessNotification, ErrorNotification} from './components/Notification'\nimport './index.css'\n\n\nfunction App() {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [addedMessage, setAddedMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    phoneService\n      .getAll()\n      .then(personsData => {setPersons(personsData.persons)} )\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    \n    const personObject = {\n      name: newName,\n      number: newNumber,\n    }\n\n    for (const person of persons) {\n      if (person.name === personObject.name) {\n        \n        if (window.confirm(`${person.name} is already added to phonebook, replace the old number with a new one?`)) {\n          phoneService\n            .replace(person.id, personObject) // put returns updated person\n            .then(returnedPerson => {\n              setPersons(persons.map(person => person.id !== returnedPerson.id ? person : returnedPerson))\n            })\n            .catch(error => {\n              setErrorMessage(`Information of ${person.name} has already been removed from the server`)\n              setTimeout(() => {\n                setErrorMessage(null)\n              }, 4000)\n              setPersons(persons.filter(p => person.name !== p.name))\n            })\n        }\n        setNewName(\"\")\n        setNewNumber(\"\")\n        return\n      }\n    }\n    \n    phoneService\n      .create(personObject)\n      .then(newPerson => setPersons(persons.concat(newPerson)))\n\n    setNewNumber(\"\")\n    setNewName(\"\")\n    setAddedMessage(`Added ${personObject.name}`)\n    setTimeout(() => {\n      setAddedMessage(null)\n    }, 4000)\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const deleteNum = (id, name) => {\n    if (!(window.confirm(`Delete ${name}?`))) return // if user cancels, return\n    phoneService\n      .deleteNum(id)\n      .then(setPersons(persons.filter(person => person.id !== id)))\n      .catch(error => {\n        alert(`The number for ${name} has ${error}`)\n      })\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <SuccessNotification message = {errorMessage} />\n      <ErrorNotification message = {addedMessage} />\n      <PersonForm onSubmit = {addPerson} persons = {persons} newName = {newName} handleNameChange = {handleNameChange} newNumber = {newNumber} handleNumberChange = {handleNumberChange} />\n\n      <h2>Numbers</h2>\n      {persons.map(person => {\n        return (\n          <Person key = {person.id} name = {person.name} number = {person.number} deleteNum = {() => deleteNum(person.id, person.name)} />\n        )\n      })}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}